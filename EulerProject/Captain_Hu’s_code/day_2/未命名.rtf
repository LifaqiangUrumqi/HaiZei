{\rtf1\ansi\ansicpg936\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset134 PingFangSC-Regular;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 set sw=4\
set ts=4\
set et\
set smarttab\
set smartindent\
set lbr\
set fo+=mB\
set sm\
set selection=inclusive\
set wildmenu\
set mousemodel=popup\
\
au FileType php setlocal dict+=~/.vim/dict/php_funclist.dict\
au FileType css setlocal dict+=~/.vim/dict/css.dict\
au FileType c setlocal dict+=~/.vim/dict/c.dict\
au FileType cpp setlocal dict+=~/.vim/dict/cpp.dict\
au FileType scale setlocal dict+=~/.vim/dict/scale.dict\
au FileType javascript setlocal dict+=~/.vim/dict/javascript.dict\
au FileType html setlocal dict+=~/.vim/dict/javascript.dict\
au FileType html setlocal dict+=~/.vim/dict/css.dict\
\
"\
"syntastic
\f1 \'cf\'e0\'b9\'d8
\f0 \
execute pathogen#infect()\
let g:syntastic_python_checkers=['pylint']\
let g:syntastic_php_checkers=['php', 'phpcs', 'phpmd']\
"golang\
"Processing... % (ctrl+c to stop)\
let g:fencview_autodetect=0\
set rtp+=$GOROOT/misc/vim\
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""\
" 
\f1 \'cf\'d4\'ca\'be\'cf\'e0\'b9\'d8
\f0   \
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""\
syntax on\
set cul "
\f1 \'b8\'df\'c1\'c1\'b9\'e2\'b1\'ea\'cb\'f9\'d4\'da\'d0\'d0
\f0 \
set cuc\
set shortmess=atI   " 
\f1 \'c6\'f4\'b6\'af\'b5\'c4\'ca\'b1\'ba\'f2\'b2\'bb\'cf\'d4\'ca\'be\'c4\'c7\'b8\'f6\'d4\'ae\'d6\'fa\'ce\'da\'b8\'c9\'b4\'ef\'b6\'f9\'cd\'af\'b5\'c4\'cc\'e1\'ca\'be
\f0   \
set go=             " 
\f1 \'b2\'bb\'d2\'aa\'cd\'bc\'d0\'ce\'b0\'b4\'c5\'a5
\f0   \
"color desert     " 
\f1 \'c9\'e8\'d6\'c3\'b1\'b3\'be\'b0\'d6\'f7\'cc\'e2
\f0   \
color ron     " 
\f1 \'c9\'e8\'d6\'c3\'b1\'b3\'be\'b0\'d6\'f7\'cc\'e2
\f0   \
"color torte     " 
\f1 \'c9\'e8\'d6\'c3\'b1\'b3\'be\'b0\'d6\'f7\'cc\'e2
\f0   \
"set guifont=Courier_New:h10:cANSI   " 
\f1 \'c9\'e8\'d6\'c3\'d7\'d6\'cc\'e5
\f0   \
"autocmd InsertLeave * se nocul  " 
\f1 \'d3\'c3\'c7\'b3\'c9\'ab\'b8\'df\'c1\'c1\'b5\'b1\'c7\'b0\'d0\'d0
\f0   \
autocmd InsertEnter * se cul    " 
\f1 \'d3\'c3\'c7\'b3\'c9\'ab\'b8\'df\'c1\'c1\'b5\'b1\'c7\'b0\'d0\'d0
\f0   \
set ruler           " 
\f1 \'cf\'d4\'ca\'be\'b1\'ea\'b3\'df
\f0   \
set showcmd         " 
\f1 \'ca\'e4\'c8\'eb\'b5\'c4\'c3\'fc\'c1\'ee\'cf\'d4\'ca\'be\'b3\'f6\'c0\'b4\'a3\'ac\'bf\'b4\'b5\'c4\'c7\'e5\'b3\'fe\'d0\'a9
\f0   \
"set whichwrap+=<,>,h,l   " 
\f1 \'d4\'ca\'d0\'ed
\f0 backspace
\f1 \'ba\'cd\'b9\'e2\'b1\'ea\'bc\'fc\'bf\'e7\'d4\'bd\'d0\'d0\'b1\'df\'bd\'e7
\f0 (
\f1 \'b2\'bb\'bd\'a8\'d2\'e9
\f0 )  \
set scrolloff=3     " 
\f1 \'b9\'e2\'b1\'ea\'d2\'c6\'b6\'af\'b5\'bd
\f0 buffer
\f1 \'b5\'c4\'b6\'a5\'b2\'bf\'ba\'cd\'b5\'d7\'b2\'bf\'ca\'b1\'b1\'a3\'b3\'d6
\f0 3
\f1 \'d0\'d0\'be\'e0\'c0\'eb
\f0   \
set statusline=%F%m%r%h%w\\ [FORMAT=%\{&ff\}]\\ [TYPE=%Y]\\ [POS=%l,%v][%p%%]\\ %\{strftime(\\"%d/%m/%y\\ -\\ %H:%M\\")\}   "
\f1 \'d7\'b4\'cc\'ac\'d0\'d0\'cf\'d4\'ca\'be\'b5\'c4\'c4\'da\'c8\'dd
\f0   \
set laststatus=2    " 
\f1 \'c6\'f4\'b6\'af\'cf\'d4\'ca\'be\'d7\'b4\'cc\'ac\'d0\'d0
\f0 (1),
\f1 \'d7\'dc\'ca\'c7\'cf\'d4\'ca\'be\'d7\'b4\'cc\'ac\'d0\'d0
\f0 (2)  \
"set foldenable      " 
\f1 \'d4\'ca\'d0\'ed\'d5\'db\'b5\'fe
\f0   \
""set foldmethod=manual   " 
\f1 \'ca\'d6\'b6\'af\'d5\'db\'b5\'fe
\f0   \
set nocompatible  "
\f1 \'c8\'a5\'b5\'f4\'cc\'d6\'d1\'e1\'b5\'c4\'d3\'d0\'b9\'d8
\f0 vi
\f1 \'d2\'bb\'d6\'c2\'d0\'d4\'c4\'a3\'ca\'bd\'a3\'ac\'b1\'dc\'c3\'e2\'d2\'d4\'c7\'b0\'b0\'e6\'b1\'be\'b5\'c4\'d2\'bb\'d0\'a9
\f0 bug
\f1 \'ba\'cd\'be\'d6\'cf\'de
\f0   \
" 
\f1 \'cf\'d4\'ca\'be\'d6\'d0\'ce\'c4\'b0\'ef\'d6\'fa
\f0 \
if version >= 603\
	set helplang=cn\
	set encoding=utf-8\
endif\
" 
\f1 \'d7\'d4\'b6\'af\'cb\'f5\'bd\'f8
\f0 \
set autoindent\
set cindent\
" Tab
\f1 \'bc\'fc\'b5\'c4\'bf\'ed\'b6\'c8
\f0 \
set tabstop=4\
" 
\f1 \'cd\'b3\'d2\'bb\'cb\'f5\'bd\'f8\'ce\'aa
\f0 4\
set softtabstop=4\
set shiftwidth=4\
" 
\f1 \'ca\'b9\'d3\'c3\'bf\'d5\'b8\'f1\'b4\'fa\'cc\'e6\'d6\'c6\'b1\'ed\'b7\'fb
\f0 \
set expandtab\
" 
\f1 \'d4\'da\'d0\'d0\'ba\'cd\'b6\'ce\'bf\'aa\'ca\'bc\'b4\'a6\'ca\'b9\'d3\'c3\'d6\'c6\'b1\'ed\'b7\'fb
\f0 \
set smarttab\
" 
\f1 \'cf\'d4\'ca\'be\'d0\'d0\'ba\'c5
\f0 \
set number\
" 
\f1 \'c0\'fa\'ca\'b7\'bc\'c7\'c2\'bc\'ca\'fd
\f0 \
set history=1000\
"
\f1 \'cb\'d1\'cb\'f7\'d6\'f0\'d7\'d6\'b7\'fb\'b8\'df\'c1\'c1
\f0 \
set hlsearch\
set incsearch\
"
\f1 \'d3\'ef\'d1\'d4\'c9\'e8\'d6\'c3
\f0 \
set langmenu=zh_CN.UTF-8\
set helplang=cn\
" 
\f1 \'d7\'dc\'ca\'c7\'cf\'d4\'ca\'be\'d7\'b4\'cc\'ac\'d0\'d0
\f0 \
set cmdheight=2\
" 
\f1 \'d5\'ec\'b2\'e2\'ce\'c4\'bc\'fe\'c0\'e0\'d0\'cd
\f0 \
filetype on\
" 
\f1 \'d4\'d8\'c8\'eb\'ce\'c4\'bc\'fe\'c0\'e0\'d0\'cd\'b2\'e5\'bc\'fe
\f0 \
filetype plugin on\
" 
\f1 \'ce\'aa\'cc\'d8\'b6\'a8\'ce\'c4\'bc\'fe\'c0\'e0\'d0\'cd\'d4\'d8\'c8\'eb\'cf\'e0\'b9\'d8\'cb\'f5\'bd\'f8\'ce\'c4\'bc\'fe
\f0 \
filetype indent on\
" 
\f1 \'b1\'a3\'b4\'e6\'c8\'ab\'be\'d6\'b1\'e4\'c1\'bf
\f0 \
set viminfo+=!\
" 
\f1 \'b4\'f8\'d3\'d0\'c8\'e7\'cf\'c2\'b7\'fb\'ba\'c5\'b5\'c4\'b5\'a5\'b4\'ca\'b2\'bb\'d2\'aa\'b1\'bb\'bb\'bb\'d0\'d0\'b7\'d6\'b8\'ee
\f0 \
set iskeyword+=_,$,@,%,#,-\
" 
\f1 \'d7\'d6\'b7\'fb\'bc\'e4\'b2\'e5\'c8\'eb\'b5\'c4\'cf\'f1\'cb\'d8\'d0\'d0\'ca\'fd\'c4\'bf
\f0 \
\
"markdown
\f1 \'c5\'e4\'d6\'c3
\f0 \
au BufRead,BufNewFile *.\{md,mdown,mkd,mkdn,markdown,mdwn\}   set filetype=mkd\
au BufRead,BufNewFile *.\{go\}   set filetype=go\
au BufRead,BufNewFile *.\{js\}   set filetype=javascript\
"rkdown to HTML  \
nmap md :!~/.vim/markdown.pl % > %.html <CR><CR>\
nmap fi :!firefox %.html & <CR><CR>\
nmap \\ \\cc\
vmap \\ \\cc\
\
"
\f1 \'bd\'ab
\f0 tab
\f1 \'cc\'e6\'bb\'bb\'ce\'aa\'bf\'d5\'b8\'f1
\f0 \
nmap tt :%s/\\t/    /g<CR>\
\
\
\
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""\
"""""
\f1 \'d0\'c2\'ce\'c4\'bc\'fe\'b1\'ea\'cc\'e2
\f0 \
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""\
"
\f1 \'d0\'c2\'bd\'a8
\f0 .c,.h,.sh,.java
\f1 \'ce\'c4\'bc\'fe\'a3\'ac\'d7\'d4\'b6\'af\'b2\'e5\'c8\'eb\'ce\'c4\'bc\'fe\'cd\'b7
\f0  \
autocmd BufNewFile *.cpp,*.[ch],*.sh,*.rb,*.java,*.py exec ":call SetTitle()" \
""
\f1 \'b6\'a8\'d2\'e5\'ba\'af\'ca\'fd
\f0 SetTitle
\f1 \'a3\'ac\'d7\'d4\'b6\'af\'b2\'e5\'c8\'eb\'ce\'c4\'bc\'fe\'cd\'b7
\f0  \
func SetTitle() \
	"
\f1 \'c8\'e7\'b9\'fb\'ce\'c4\'bc\'fe\'c0\'e0\'d0\'cd\'ce\'aa
\f0 .sh
\f1 \'ce\'c4\'bc\'fe
\f0  \
	if &filetype == 'sh' \
		call setline(1,"\\#!/bin/bash") \
		call append(line("."), "") \
    elseif &filetype == 'python'\
        call setline(1,"#!/usr/bin/env python")\
        call append(line("."),"# coding=utf-8")\
	    call append(line(".")+1, "") \
\
    elseif &filetype == 'ruby'\
        call setline(1,"#!/usr/bin/env ruby")\
        call append(line("."),"# encoding: utf-8")\
	    call append(line(".")+1, "")\
\
"    elseif &filetype == 'mkd'\
"        call setline(1,"<head><meta charset=\\"UTF-8\\"></head>")\
	else \
		call setline(1, "/*************************************************************************") \
		call append(line("."), "	> File Name: ".expand("%")) \
		call append(line(".")+1, "	> Author: ") \
		call append(line(".")+2, "	> Mail: ") \
		call append(line(".")+3, "	> Created Time: ".strftime("%c")) \
		call append(line(".")+4, " ************************************************************************/") \
		call append(line(".")+5, "")\
	endif\
	if expand("%:e") == 'cpp'\
		call append(line(".")+6, "#include<iostream>")\
		call append(line(".")+7, "using namespace std;")\
		call append(line(".")+8, "")\
	endif\
	if &filetype == 'c'\
		call append(line(".")+6, "#include<stdio.h>")\
		call append(line(".")+7, "")\
	endif\
	if expand("%:e") == 'h'\
		call append(line(".")+6, "#ifndef _".toupper(expand("%:r"))."_H")\
		call append(line(".")+7, "#define _".toupper(expand("%:r"))."_H")\
		call append(line(".")+8, "#endif")\
	endif\
	if &filetype == 'java'\
		call append(line(".")+6,"public class ".expand("%:r"))\
		call append(line(".")+7,"")\
	endif\
	"
\f1 \'d0\'c2\'bd\'a8\'ce\'c4\'bc\'fe\'ba\'f3\'a3\'ac\'d7\'d4\'b6\'af\'b6\'a8\'ce\'bb\'b5\'bd\'ce\'c4\'bc\'fe\'c4\'a9\'ce\'b2
\f0 \
endfunc \
autocmd BufNewFile * normal G\
\
\
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""\
"
\f1 \'bc\'fc\'c5\'cc\'c3\'fc\'c1\'ee
\f0 \
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""\
:nmap <silent> <F9> <ESC>:Tlist<RETURN>\
" shift tab pages\
map <S-Left> :tabp<CR>\
map <S-Right> :tabn<CR>\
map! <C-Z> <Esc>zzi\
map! <C-O> <C-Y>,\
map <C-A> ggVG$"+y\
map <Esc><Esc> :w<CR>\
map <F12> gg=G\
map <C-w> <C-w>w\
imap <C-k> <C-y>,\
imap <C-t> <C-q><TAB>\
imap <C-j> <ESC>\
" 
\f1 \'d1\'a1\'d6\'d0\'d7\'b4\'cc\'ac\'cf\'c2
\f0  Ctrl+c 
\f1 \'b8\'b4\'d6\'c6
\f0 \
"map <C-v> "*pa\
imap <C-v> <Esc>"*pa\
imap <C-a> <Esc>^\
imap <C-e> <Esc>$\
vmap <C-c> "+y\
set mouse=v\
"set clipboard=unnamed\
"
\f1 \'c8\'a5\'bf\'d5\'d0\'d0
\f0   \
nnoremap <F2> :g/^\\s*$/d<CR> \
"
\f1 \'b1\'c8\'bd\'cf\'ce\'c4\'bc\'fe
\f0   \
nnoremap <C-F2> :vert diffsplit \
"nnoremap <Leader>fu :CtrlPFunky<Cr>\
"nnoremap <C-n> :CtrlPFunky<Cr>\
"
\f1 \'c1\'d0\'b3\'f6\'b5\'b1\'c7\'b0\'c4\'bf\'c2\'bc\'ce\'c4\'bc\'fe
\f0   \
map <F3> :NERDTreeToggle<CR>\
imap <F3> <ESC> :NERDTreeToggle<CR>\
"
\f1 \'b4\'f2\'bf\'aa\'ca\'f7\'d7\'b4\'ce\'c4\'bc\'fe\'c4\'bf\'c2\'bc
\f0   \
map <C-F3> \\be  \
:autocmd BufRead,BufNewFile *.dot map <F5> :w<CR>:!dot -Tjpg -o %<.jpg % && eog %<.jpg  <CR><CR> && exec "redr!"\
"C
\f1 \'a3\'ac
\f0 C++ 
\f1 \'b0\'b4
\f0 F5
\f1 \'b1\'e0\'d2\'eb\'d4\'cb\'d0\'d0
\f0 \
map <F5> :call CompileRunGcc()<CR>\
func! CompileRunGcc()\
	exec "w"\
	if &filetype == 'c'\
		exec "!g++ % -o %<"\
		exec "!time ./%<"\
	elseif &filetype == 'cpp'\
		exec "!g++ % -std=c++11 -o %<"\
		exec "!time ./%<"\
	elseif &filetype == 'java' \
		exec "!javac %" \
		exec "!time java %<"\
	elseif &filetype == 'sh'\
		:!time bash %\
	elseif &filetype == 'python'\
		exec "!time python2.7 %"\
    elseif &filetype == 'html'\
        exec "!firefox % &"\
    elseif &filetype == 'go'\
"        exec "!go build %<"\
        exec "!time go run %"\
    elseif &filetype == 'mkd'\
        exec "!~/.vim/markdown.pl % > %.html &"\
        exec "!firefox %.html &"\
	endif\
endfunc\
"C,C++
\f1 \'b5\'c4\'b5\'f7\'ca\'d4
\f0 \
map <F8> :call Rungdb()<CR>\
func! Rungdb()\
	exec "w"\
	exec "!g++ % -std=c++11 -g -o %<"\
	exec "!gdb ./%<"\
endfunc\
\
\
"
\f1 \'b4\'fa\'c2\'eb\'b8\'f1\'ca\'bd\'d3\'c5\'bb\'af\'bb\'af
\f0 \
\
map <F6> :call FormartSrc()<CR><CR>\
\
"
\f1 \'b6\'a8\'d2\'e5
\f0 FormartSrc()\
func FormartSrc()\
    exec "w"\
    if &filetype == 'c'\
        exec "!astyle --style=ansi -a --suffix=none %"\
    elseif &filetype == 'cpp' || &filetype == 'hpp'\
        exec "r !astyle --style=ansi --one-line=keep-statements -a --suffix=none %> /dev/null 2>&1"\
    elseif &filetype == 'perl'\
        exec "!astyle --style=gnu --suffix=none %"\
    elseif &filetype == 'py'||&filetype == 'python'\
        exec "r !autopep8 -i --aggressive %"\
    elseif &filetype == 'java'\
        exec "!astyle --style=java --suffix=none %"\
    elseif &filetype == 'jsp'\
        exec "!astyle --style=gnu --suffix=none %"\
    elseif &filetype == 'xml'\
        exec "!astyle --style=gnu --suffix=none %"\
    else\
        exec "normal gg=G"\
        return\
    endif\
    exec "e! %"\
endfunc\
"
\f1 \'bd\'e1\'ca\'f8\'b6\'a8\'d2\'e5
\f0 FormartSrc\
\
\
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""\
""
\f1 \'ca\'b5\'d3\'c3\'c9\'e8\'d6\'c3
\f0 \
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""\
if has("autocmd")\
      autocmd BufReadPost *\
          \\ if line("'\\"") > 0 && line("'\\"") <= line("$") |\
          \\   exe "normal g`\\"" |\
          \\ endif\
endif\
"
\f1 \'b5\'b1\'b4\'f2\'bf\'aa
\f0 vim
\f1 \'c7\'d2\'c3\'bb\'d3\'d0\'ce\'c4\'bc\'fe\'ca\'b1\'d7\'d4\'b6\'af\'b4\'f2\'bf\'aa
\f0 NERDTree\
autocmd vimenter * if !argc() | NERDTree | endif\
" 
\f1 \'d6\'bb\'ca\'a3
\f0  NERDTree
\f1 \'ca\'b1\'d7\'d4\'b6\'af\'b9\'d8\'b1\'d5
\f0 \
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif\
\
" 
\f1 \'c9\'e8\'d6\'c3\'b5\'b1\'ce\'c4\'bc\'fe\'b1\'bb\'b8\'c4\'b6\'af\'ca\'b1\'d7\'d4\'b6\'af\'d4\'d8\'c8\'eb
\f0 \
set autoread\
" quickfix
\f1 \'c4\'a3\'ca\'bd
\f0 \
autocmd FileType c,cpp map <buffer> <leader><space> :w<cr>:make<cr>\
"
\f1 \'b4\'fa\'c2\'eb\'b2\'b9\'c8\'ab
\f0  \
set completeopt=preview,menu \
"
\f1 \'d4\'ca\'d0\'ed\'b2\'e5\'bc\'fe
\f0   \
"filetype plugin on\
"
\f1 \'b9\'b2\'cf\'ed\'bc\'f4\'cc\'f9\'b0\'e5
\f0   \
"set clipboard+=unnamed \
"
\f1 \'d7\'d4\'b6\'af\'b1\'a3\'b4\'e6
\f0 \
set autowrite\
"set ruler                   " 
\f1 \'b4\'f2\'bf\'aa\'d7\'b4\'cc\'ac\'c0\'b8\'b1\'ea\'b3\'df
\f0 \
"set cursorline              " 
\f1 \'cd\'bb\'b3\'f6\'cf\'d4\'ca\'be\'b5\'b1\'c7\'b0\'d0\'d0
\f0 \
set magic                   " 
\f1 \'c9\'e8\'d6\'c3\'c4\'a7\'ca\'f5
\f0 \
set guioptions-=T           " 
\f1 \'d2\'fe\'b2\'d8\'b9\'a4\'be\'df\'c0\'b8
\f0 \
set guioptions-=m           " 
\f1 \'d2\'fe\'b2\'d8\'b2\'cb\'b5\'a5\'c0\'b8
\f0 \
""set foldcolumn=0\
""set foldmethod=indent \
""set foldlevel=3 \
" 
\f1 \'b2\'bb\'d2\'aa\'ca\'b9\'d3\'c3
\f0 vi
\f1 \'b5\'c4\'bc\'fc\'c5\'cc\'c4\'a3\'ca\'bd\'a3\'ac\'b6\'f8\'ca\'c7
\f0 vim
\f1 \'d7\'d4\'bc\'ba\'b5\'c4
\f0 \
set nocompatible\
" 
\f1 \'c8\'a5\'b5\'f4\'ca\'e4\'c8\'eb\'b4\'ed\'ce\'f3\'b5\'c4\'cc\'e1\'ca\'be\'c9\'f9\'d2\'f4
\f0 \
set noeb\
" 
\f1 \'d4\'da\'b4\'a6\'c0\'ed\'ce\'b4\'b1\'a3\'b4\'e6\'bb\'f2\'d6\'bb\'b6\'c1\'ce\'c4\'bc\'fe\'b5\'c4\'ca\'b1\'ba\'f2\'a3\'ac\'b5\'af\'b3\'f6\'c8\'b7\'c8\'cf
\f0 \
set confirm\
"
\f1 \'bd\'fb\'d6\'b9\'c9\'fa\'b3\'c9\'c1\'d9\'ca\'b1\'ce\'c4\'bc\'fe
\f0 \
set nobackup\
set noswapfile\
"
\f1 \'cb\'d1\'cb\'f7\'ba\'f6\'c2\'d4\'b4\'f3\'d0\'a1\'d0\'b4
\f0 \
set ignorecase\
\
\
\
\
set linespace=0\
" 
\f1 \'d4\'f6\'c7\'bf\'c4\'a3\'ca\'bd\'d6\'d0\'b5\'c4\'c3\'fc\'c1\'ee\'d0\'d0\'d7\'d4\'b6\'af\'cd\'ea\'b3\'c9\'b2\'d9\'d7\'f7
\f0 \
set wildmenu\
" 
\f1 \'ca\'b9\'bb\'d8\'b8\'f1\'bc\'fc\'a3\'a8
\f0 backspace
\f1 \'a3\'a9\'d5\'fd\'b3\'a3\'b4\'a6\'c0\'ed
\f0 indent, eol, start
\f1 \'b5\'c8
\f0 \
set backspace=2\
" 
\f1 \'d4\'ca\'d0\'ed
\f0 backspace
\f1 \'ba\'cd\'b9\'e2\'b1\'ea\'bc\'fc\'bf\'e7\'d4\'bd\'d0\'d0\'b1\'df\'bd\'e7
\f0 \
set whichwrap+=<,>,h,l\
" 
\f1 \'bf\'c9\'d2\'d4\'d4\'da
\f0 buffer
\f1 \'b5\'c4\'c8\'ce\'ba\'ce\'b5\'d8\'b7\'bd\'ca\'b9\'d3\'c3\'ca\'f3\'b1\'ea\'a3\'a8\'c0\'e0\'cb\'c6
\f0 office
\f1 \'d6\'d0\'d4\'da\'b9\'a4\'d7\'f7\'c7\'f8\'cb\'ab\'bb\'f7\'ca\'f3\'b1\'ea\'b6\'a8\'ce\'bb\'a3\'a9
\f0 \
set mouse=a\
set selection=exclusive\
set selectmode=mouse,key\
" 
\f1 \'cd\'a8\'b9\'fd\'ca\'b9\'d3\'c3
\f0 : commands
\f1 \'c3\'fc\'c1\'ee\'a3\'ac\'b8\'e6\'cb\'df\'ce\'d2\'c3\'c7\'ce\'c4\'bc\'fe\'b5\'c4\'c4\'c4\'d2\'bb\'d0\'d0\'b1\'bb\'b8\'c4\'b1\'e4\'b9\'fd
\f0 \
set report=0\
" 
\f1 \'d4\'da\'b1\'bb\'b7\'d6\'b8\'ee\'b5\'c4\'b4\'b0\'bf\'da\'bc\'e4\'cf\'d4\'ca\'be\'bf\'d5\'b0\'d7\'a3\'ac\'b1\'e3\'d3\'da\'d4\'c4\'b6\'c1
\f0 \
set fillchars=vert:\\ ,stl:\\ ,stlnc:\\\
" 
\f1 \'b8\'df\'c1\'c1\'cf\'d4\'ca\'be\'c6\'a5\'c5\'e4\'b5\'c4\'c0\'a8\'ba\'c5
\f0 \
set showmatch\
" 
\f1 \'c6\'a5\'c5\'e4\'c0\'a8\'ba\'c5\'b8\'df\'c1\'c1\'b5\'c4\'ca\'b1\'bc\'e4\'a3\'a8\'b5\'a5\'ce\'bb\'ca\'c7\'ca\'ae\'b7\'d6\'d6\'ae\'d2\'bb\'c3\'eb\'a3\'a9
\f0 \
set matchtime=1\
" 
\f1 \'b9\'e2\'b1\'ea\'d2\'c6\'b6\'af\'b5\'bd
\f0 buffer
\f1 \'b5\'c4\'b6\'a5\'b2\'bf\'ba\'cd\'b5\'d7\'b2\'bf\'ca\'b1\'b1\'a3\'b3\'d6
\f0 3
\f1 \'d0\'d0\'be\'e0\'c0\'eb
\f0 \
set scrolloff=3\
" 
\f1 \'ce\'aa
\f0 C
\f1 \'b3\'cc\'d0\'f2\'cc\'e1\'b9\'a9\'d7\'d4\'b6\'af\'cb\'f5\'bd\'f8
\f0 \
"
\f1 \'d7\'d4\'b6\'af\'b2\'b9\'c8\'ab
\f0 \
"":inoremap ( ()<ESC>i\
"":inoremap ) <c-r>=ClosePair(')')<CR>\
":inoremap \{ \{<CR>\}<ESC>O\
":inoremap \} <c-r>=ClosePair('\}')<CR>\
"":inoremap [ []<ESC>i\
"":inoremap ] <c-r>=ClosePair(']')<CR>\
"":inoremap " ""<ESC>i\
"":inoremap ' ''<ESC>i\
""function! ClosePair(char)\
""	if getline('.')[col('.') - 1] == a:char\
""		return "\\<Right>"\
""	else\
""		return a:char\
""	endif\
""endfunction\
filetype plugin indent on \
"
\f1 \'b4\'f2\'bf\'aa\'ce\'c4\'bc\'fe\'c0\'e0\'d0\'cd\'bc\'ec\'b2\'e2
\f0 , 
\f1 \'bc\'d3\'c1\'cb\'d5\'e2\'be\'e4\'b2\'c5\'bf\'c9\'d2\'d4\'d3\'c3\'d6\'c7\'c4\'dc\'b2\'b9\'c8\'ab
\f0 \
set completeopt=longest,menu\
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""\
" CTags
\f1 \'b5\'c4\'c9\'e8\'b6\'a8
\f0   \
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""\
let Tlist_Sort_Type = "name"    " 
\f1 \'b0\'b4\'d5\'d5\'c3\'fb\'b3\'c6\'c5\'c5\'d0\'f2
\f0   \
let Tlist_Use_Right_Window = 1  " 
\f1 \'d4\'da\'d3\'d2\'b2\'e0\'cf\'d4\'ca\'be\'b4\'b0\'bf\'da
\f0   \
let Tlist_Compart_Format = 1    " 
\f1 \'d1\'b9\'cb\'f5\'b7\'bd\'ca\'bd
\f0   \
let Tlist_Exist_OnlyWindow = 1  " 
\f1 \'c8\'e7\'b9\'fb\'d6\'bb\'d3\'d0\'d2\'bb\'b8\'f6
\f0 buffer
\f1 \'a3\'ac
\f0 kill
\f1 \'b4\'b0\'bf\'da\'d2\'b2
\f0 kill
\f1 \'b5\'f4
\f0 buffer  \
""let Tlist_File_Fold_Auto_Close = 0  " 
\f1 \'b2\'bb\'d2\'aa\'b9\'d8\'b1\'d5\'c6\'e4\'cb\'fb\'ce\'c4\'bc\'fe\'b5\'c4
\f0 tags  \
""let Tlist_Enable_Fold_Column = 0    " 
\f1 \'b2\'bb\'d2\'aa\'cf\'d4\'ca\'be\'d5\'db\'b5\'fe\'ca\'f7
\f0   \
"let Tlist_Show_One_File=1            "
\f1 \'b2\'bb\'cd\'ac\'ca\'b1\'cf\'d4\'ca\'be\'b6\'e0\'b8\'f6\'ce\'c4\'bc\'fe\'b5\'c4
\f0 tag
\f1 \'a3\'ac\'d6\'bb\'cf\'d4\'ca\'be\'b5\'b1\'c7\'b0\'ce\'c4\'bc\'fe\'b5\'c4
\f0 \
"
\f1 \'c9\'e8\'d6\'c3
\f0 tags  \
set tags=tags;  \
set autochdir \
\
\
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""\
"
\f1 \'c6\'e4\'cb\'fb\'b6\'ab\'b6\'ab
\f0 \
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""\
"
\f1 \'c4\'ac\'c8\'cf\'b4\'f2\'bf\'aa
\f0 Taglist \
let Tlist_Auto_Open=0 \
"""""""""""""""""""""""""""""" \
" Tag list (ctags) \
"""""""""""""""""""""""""""""""" \
let Tlist_Ctags_Cmd = '/usr/local/bin/ctags' \
let Tlist_Show_One_File = 1 "
\f1 \'b2\'bb\'cd\'ac\'ca\'b1\'cf\'d4\'ca\'be\'b6\'e0\'b8\'f6\'ce\'c4\'bc\'fe\'b5\'c4
\f0 tag
\f1 \'a3\'ac\'d6\'bb\'cf\'d4\'ca\'be\'b5\'b1\'c7\'b0\'ce\'c4\'bc\'fe\'b5\'c4
\f0  \
let Tlist_File_Fold_Auto_Close = 1\
let Tlist_Exit_OnlyWindow = 1 "
\f1 \'c8\'e7\'b9\'fb
\f0 taglist
\f1 \'b4\'b0\'bf\'da\'ca\'c7\'d7\'ee\'ba\'f3\'d2\'bb\'b8\'f6\'b4\'b0\'bf\'da\'a3\'ac\'d4\'f2\'cd\'cb\'b3\'f6
\f0 vim \
let Tlist_Use_Right_Window = 1 "
\f1 \'d4\'da\'d3\'d2\'b2\'e0\'b4\'b0\'bf\'da\'d6\'d0\'cf\'d4\'ca\'be
\f0 taglist
\f1 \'b4\'b0\'bf\'da
\f0 \
" minibufexpl
\f1 \'b2\'e5\'bc\'fe\'b5\'c4\'d2\'bb\'b0\'e3\'c9\'e8\'d6\'c3
\f0 \
let g:miniBufExplMapWindowNavVim = 1\
let g:miniBufExplMapWindowNavArrows = 1\
let g:miniBufExplMapCTabSwitchBufs = 1\
let g:miniBufExplModSelTarget = 1  \
nmap tl :Tlist<cr>\
\
"python
\f1 \'b2\'b9\'c8\'ab
\f0 \
let g:pydiction_location = '~/.vim/after/complete-dict'\
let g:pydiction_menu_height = 20\
let Tlist_Ctags_Cmd='/usr/local/bin/ctags'\
let g:miniBufExplMapWindowNavVim = 1\
let g:miniBufExplMapWindowNavArrows = 1\
let g:miniBufExplMapCTabSwitchBufs = 1\
let g:miniBufExplModSelTarget = 1\
\
\
set iskeyword+=.\
set termencoding=utf-8\
set encoding=utf8\
set fileencodings=utf8,ucs-bom,gbk,cp936,gb2312,gb18030\
\
autocmd FileType python set omnifunc=pythoncomplete#Complete\
\
"set nocompatible               " be iMproved\
"filetype off                   " required!\
\
set rtp+=~/.vim/bundle/vundle/\
call vundle#rc()\
\
" let Vundle manage Vundle\
" required! \
Bundle 'gmarik/vundle'\
\
" My Bundles here:\
"\
" original repos on github\
Bundle 'tpope/vim-fugitive'\
Bundle 'rstacruz/sparkup', \{'rtp': 'vim/'\}\
Bundle 'Yggdroot/indentLine'\
let g:indentLine_char = '
\f1 \'a9\'ae
\f0 '\
"ndle 'tpope/vim-rails.git'\
" vim-scripts repos\
Bundle 'L9'\
Bundle 'FuzzyFinder'\
" non github repos\
Bundle 'https://github.com/wincent/command-t.git'\
Bundle 'Auto-Pairs'\
Bundle 'python-imports.vim'\
Bundle 'CaptureClipboard'\
Bundle 'ctrlp-modified.vim'\
Bundle 'last_edit_marker.vim'\
Bundle 'synmark.vim'\
"Bundle 'Python-mode-klen'\
Bundle 'SQLComplete.vim'\
Bundle 'Javascript-OmniCompletion-with-YUI-and-j'\
"Bundle 'JavaScript-Indent'\
"Bundle 'Better-Javascript-Indentation'\
Bundle 'jslint.vim'\
Bundle "pangloss/vim-javascript"\
Bundle 'Vim-Script-Updater'\
Bundle 'ctrlp.vim'\
Bundle 'tacahiroy/ctrlp-funky'\
Bundle 'jsbeautify'\
Bundle 'The-NERD-Commenter'\
"django\
Bundle 'django_templates.vim'\
Bundle 'Django-Projects'\
\
"Bundle 'FredKSchott/CoVim'\
"Bundle 'djangojump'\
" ...\
let g:html_indent_inctags = "html,body,head,tbody"\
let g:html_indent_script1 = "inc"\
let g:html_indent_style1 = "inc"\
\
filetype plugin indent on     " required!\
"\
"ctrlp
\f1 \'c9\'e8\'d6\'c3
\f0 \
"\
set wildignore+=*/tmp/*,*.so,*.swp,*.zip,*.pyc,*.png,*.jpg,*.gif     " MacOSX/Linux\
set wildignore+=*\\\\tmp\\\\*,*.swp,*.zip,*.exe,*.pyc,*.png,*.jpg,*.gif  " Windows\
\
let g:ctrlp_custom_ignore = '\\v[\\/]\\.(git|hg|svn)$'\
let g:ctrlp_custom_ignore = '\\v\\.(exe|so|dll)$'\
let g:ctrlp_extensions = ['funky']\
\
let NERDTreeIgnore=['\\.pyc']\
}